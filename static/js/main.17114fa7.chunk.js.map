{"version":3,"sources":["components/Layout/LayoutStyles.js","components/Layout/Layout.js","components/SectionTitle.js","components/Button/ButtonStyles.js","components/Button/Button.js","components/FeedbackOptions.js","components/Statistics.js","components/Notification.js","js/countTotalFeedback.js","js/countPositiveFeedbackPercentage.js","App.js","index.js"],"names":["Div","styled","div","Layout","children","SectionTitle","title","ButtonStyled","button","Button","onFeedback","type","onClick","toLowerCase","FeedbackOptions","options","map","option","i","Statistics","good","neutral","bad","total","posFeedback","Notification","message","countTotalFeedback","valuesArr","reduce","a","c","countPositiveFeedbackPercentage","result","toFixed","FeedbackTypes","GOOD","NEUTRAL","BAD","App","useState","setGood","setNeutral","setBad","feedbackTypes","Object","values","feedbackValues","feedbackStats","notification","feedbackType","state","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oYAEA,IAQeA,EARHC,IAAOC,IAAV,KCOMC,EANA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,cAAC,EAAD,UAAMA,KCWxBC,EAZM,SAAC,GAAD,QAAGC,aAAH,MAAW,QAAX,EAAoBF,EAApB,EAAoBA,SAApB,OACnB,oCACE,6BAAKE,IACJF,M,mRCHL,IAaeG,EAbMN,IAAOO,OAAV,KCaHC,EAZA,SAAC,GAA2B,IAAzBH,EAAwB,EAAxBA,MAAOI,EAAiB,EAAjBA,WACvB,OACE,cAAC,EAAD,CAAcC,KAAK,SAASC,QAAS,kBAAMF,EAAWJ,EAAMO,gBAA5D,SACGP,KCYQQ,EAfS,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASL,EAAiB,EAAjBA,WAClC,OACE,mCACGK,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACX,cAAC,EAAD,CAAgBZ,MAAOW,EAAQP,WAAYA,GAA9BQ,SCmBNC,EAxBI,SAAC,GAAD,QACjBC,YADiB,MACV,EADU,MAEjBC,eAFiB,MAEP,EAFO,MAGjBC,WAHiB,MAGX,EAHW,MAIjBC,aAJiB,MAIT,EAJS,MAKjBC,mBALiB,MAKH,EALG,SAOjB,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WCNWC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCA3BC,EAFY,SAACC,GAAD,OAAeA,EAAUC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,MCK1DC,EALyB,SAACZ,EAAMG,GAC7C,IAAMU,IAAYb,EAAOG,EAAS,KAAKW,QAAQ,GAC/C,OAAOX,EAAQU,EAAS,GCOpBE,EAAgB,CAAEC,KAAM,OAAQC,QAAS,UAAWC,IAAK,OAqDhDC,EAnDH,WAAO,IAAD,EACQC,mBAAS,GADjB,mBACTpB,EADS,KACHqB,EADG,OAEcD,mBAAS,GAFvB,mBAETnB,EAFS,KAEAqB,EAFA,OAGMF,mBAAS,GAHf,mBAGTlB,EAHS,KAGJqB,EAHI,KAIVC,EAAgBC,OAAOC,OAAOX,GAC9BY,EAAiB,CAAC3B,EAAMC,EAASC,GACjCC,EAAQI,EAAmBoB,GAsB3BC,EACJ,cAAC,EAAD,CACE5B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,YAAaQ,EAAgCZ,EAAMG,KAGjD0B,EAAe,cAAC,EAAD,CAAcvB,QAAQ,yBAE3C,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAcpB,MAAM,2BAApB,SACE,cAAC,EAAD,CAAiBS,QAAS6B,EAAelC,WAlCvB,SAACwC,GAEvB,OAAQA,GACN,KAF6Bf,EAAvBC,KAGJK,GAAQ,SAACU,GAAD,OAAWA,EAAQ,KAC3B,MAEF,KAN6BhB,EAAjBE,QAOVK,GAAW,SAACS,GAAD,OAAWA,EAAQ,KAC9B,MAEF,KAV6BhB,EAARG,IAWnBK,GAAO,SAACQ,GAAD,OAAWA,EAAQ,KAC1B,MAEF,QACE,aAoBF,cAAC,EAAD,CAAc7C,MAAM,aAApB,SACGqB,EAAmBoB,GAAkB,EAAIC,EAAgBC,Q,MClDlEG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.17114fa7.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Div = styled.div`\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 12px;\n  padding-right: 12px;\n`;\n\nexport default Div;\n","import PropTypes from 'prop-types';\nimport Div from './LayoutStyles';\n\nconst Layout = ({ children }) => <Div>{children}</Div>;\n\nLayout.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n};\n\nexport default Layout;\n","import PropTypes from 'prop-types';\n\nconst SectionTitle = ({ title = 'Title', children }) => (\n  <section>\n    <h2>{title}</h2>\n    {children}\n  </section>\n);\n\nSectionTitle.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SectionTitle;\n","import styled from 'styled-components';\n\nconst ButtonStyled = styled.button`\n  padding: 6px;\n  border: 1px solid #a9a9a9;\n  border-radius: 5px;\n  background-color: #fff;\n  min-width: 50px;\n  text-transform: capitalize;\n\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n\nexport default ButtonStyled;\n","import PropTypes from 'prop-types';\r\nimport ButtonStyled from './ButtonStyles';\r\n\r\nconst Button = ({ title, onFeedback }) => {\r\n  return (\r\n    <ButtonStyled type=\"button\" onClick={() => onFeedback(title.toLowerCase())}>\r\n      {title}\r\n    </ButtonStyled>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  onFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default Button;\r\n","import PropTypes from 'prop-types';\r\nimport Button from './Button/Button';\r\n\r\nconst FeedbackOptions = ({ options, onFeedback }) => {\r\n  return (\r\n    <>\r\n      {options.map((option, i) => (\r\n        <Button key={i} title={option} onFeedback={onFeedback} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({\r\n  good = 0,\r\n  neutral = 0,\r\n  bad = 0,\r\n  total = 0,\r\n  posFeedback = 0,\r\n}) => (\r\n  <>\r\n    <p>Good: {good}</p>\r\n    <p>Neutral: {neutral}</p>\r\n    <p>Bad: {bad}</p>\r\n    <p>Total: {total}</p>\r\n    <p>Positive feedback: {posFeedback}%</p>\r\n  </>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  posFeedback: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","const countTotalFeedback = (valuesArr) => valuesArr.reduce((a, c) => a + c);\r\n\r\nexport default countTotalFeedback;\r\n","const countPositiveFeedbackPercentage = (good, total) => {\r\n  const result = +((good / total) * 100).toFixed(1);\r\n  return total ? result : 0;\r\n};\r\n\r\nexport default countPositiveFeedbackPercentage;\r\n","import { useState } from 'react';\r\nimport Layout from './components/Layout/Layout';\r\nimport SectionTitle from './components/SectionTitle';\r\nimport FeedbackOptions from './components/FeedbackOptions';\r\nimport Statistics from './components/Statistics';\r\nimport Notification from './components/Notification';\r\nimport countTotalFeedback from './js/countTotalFeedback';\r\nimport countPositiveFeedbackPercentage from './js/countPositiveFeedbackPercentage';\r\n\r\nconst FeedbackTypes = { GOOD: 'good', NEUTRAL: 'neutral', BAD: 'bad' };\r\n\r\nconst App = () => {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n  const feedbackTypes = Object.values(FeedbackTypes);\r\n  const feedbackValues = [good, neutral, bad];\r\n  const total = countTotalFeedback(feedbackValues);\r\n\r\n  const increaseCounter = (feedbackType) => {\r\n    const { GOOD, NEUTRAL, BAD } = FeedbackTypes;\r\n    switch (feedbackType) {\r\n      case GOOD: {\r\n        setGood((state) => state + 1);\r\n        break;\r\n      }\r\n      case NEUTRAL: {\r\n        setNeutral((state) => state + 1);\r\n        break;\r\n      }\r\n      case BAD: {\r\n        setBad((state) => state + 1);\r\n        break;\r\n      }\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const feedbackStats = (\r\n    <Statistics\r\n      good={good}\r\n      neutral={neutral}\r\n      bad={bad}\r\n      total={total}\r\n      posFeedback={countPositiveFeedbackPercentage(good, total)}\r\n    />\r\n  );\r\n  const notification = <Notification message=\"No feedback given :(\" />;\r\n\r\n  return (\r\n    <Layout>\r\n      <SectionTitle title=\"What do you think of us?\">\r\n        <FeedbackOptions options={feedbackTypes} onFeedback={increaseCounter} />\r\n      </SectionTitle>\r\n      <SectionTitle title=\"Statistics\">\r\n        {countTotalFeedback(feedbackValues) > 0 ? feedbackStats : notification}\r\n      </SectionTitle>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n// import AppHooks from './AppHooks';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}