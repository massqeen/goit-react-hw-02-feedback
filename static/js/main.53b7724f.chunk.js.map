{"version":3,"sources":["components/Layout.js","components/SectionTitle.js","components/Button.js","components/FeedbackOptions.js","components/Statistics.js","components/Notification.js","App.js","index.js"],"names":["Div","styled","div","Layout","children","SectionTitle","title","defaultProps","ButtonStyled","button","Button","onFeedback","type","onClick","toLowerCase","FeedbackOptions","options","map","option","shortid","generate","Statistics","good","neutral","bad","total","posFeedback","Notification","message","App","state","clickHandler","feedbackType","setState","prevState","Object","values","this","reduce","acc","curr","countTotalFeedback","result","toFixed","keys","key","feedbackStats","countPositiveFeedbackPercentage","notification","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qaAGA,IAAMA,EAAMC,IAAOC,IAAV,KAcMC,EANA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,cAACJ,EAAD,UAAMI,KCTjCC,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOF,EAAV,EAAUA,SAAV,OACnB,oCACE,6BAAKE,IACJF,MAQLC,EAAaE,aAAe,CAC1BD,MAAO,SAGMD,Q,oSCdf,IAAMG,EAAeP,IAAOQ,OAAV,KAyBHC,EAZA,SAAC,GAAoC,IAAD,IAAjCJ,aAAiC,MAAzB,OAAyB,EAAjBK,EAAiB,EAAjBA,WAChC,OACE,cAACH,EAAD,CAAcI,KAAK,SAASC,QAAS,kBAAMF,EAAWL,EAAMQ,gBAA5D,SACGR,KCfDS,EAAkB,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASL,EAAiB,EAAjBA,WAClC,OACE,mCACGK,EAAQC,KAAI,SAACC,GACZ,OACE,cAAC,EAAD,CAEEZ,MAAOY,EACPP,WAAYA,GAFPQ,IAAQC,kBAUzBL,EAAgBR,aAAe,CAC7BS,QAAS,CAAC,OAAQ,UAAW,QAOhBD,QC1BTM,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,YAA9B,OACjB,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WAIJL,EAAWd,aAAe,CACxBe,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,YAAa,GAUAL,QCzBTM,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KAE1CD,EAAapB,aAAe,CAC1BqB,QAAS,IAMID,QC8CAE,E,4MAjDbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAaPO,aAAe,SAACC,GACd,OAAO,EAAKC,UAAS,SAACC,GAAD,sBAClBF,EAAeE,EAAUF,GAAgB,O,mEAX5C,OAAOG,OAAOC,OAAOC,KAAKP,OAAOQ,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,IAAM,K,wDAInE,IAAMf,EAAQY,KAAKI,qBACbC,IAAYL,KAAKP,MAAMR,KAAOG,EAAS,KAAKkB,QAAQ,GAC1D,OAAOlB,EAAQiB,EAAS,I,+BAUxB,IAAM1B,EAAUmB,OAAOS,KAAKP,KAAKP,OAAOb,KAAI,SAAC4B,GAAD,OAASA,KAD9C,EAEwBR,KAAKP,MAA5BR,EAFD,EAECA,KAAMC,EAFP,EAEOA,QAASC,EAFhB,EAEgBA,IACjBsB,EACJ,cAAC,EAAD,CACExB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOY,KAAKI,qBACZf,YAAaW,KAAKU,oCAGhBC,EAAe,cAAC,EAAD,CAAcpB,QAAQ,yBAE3C,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAActB,MAAM,2BAApB,SACE,cAAC,EAAD,CAAiBU,QAASA,EAASL,WAAY0B,KAAKN,iBAEtD,cAAC,EAAD,CAAczB,MAAM,aAApB,SACG+B,KAAKI,qBAAuB,EAAIK,EAAgBE,W,GA3CzCC,a,MCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.53b7724f.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 12px;\n  padding-right: 12px;\n`;\n\nconst Layout = ({ children }) => <Div>{children}</Div>;\n\nLayout.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n};\n\nexport default Layout;\n","import PropTypes from 'prop-types';\n\nconst SectionTitle = ({ title, children }) => (\n  <section>\n    <h2>{title}</h2>\n    {children}\n  </section>\n);\n\nSectionTitle.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  title: PropTypes.string.isRequired,\n};\nSectionTitle.defaultProps = {\n  title: 'Title',\n};\n\nexport default SectionTitle;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst ButtonStyled = styled.button`\n  padding: 6px;\n  border: 1px solid #a9a9a9;\n  border-radius: 5px;\n  background-color: #fff;\n  min-width: 50px;\n  text-transform: capitalize;\n\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n\nconst Button = ({ title = 'Good', onFeedback }) => {\n  return (\n    <ButtonStyled type=\"button\" onClick={() => onFeedback(title.toLowerCase())}>\n      {title}\n    </ButtonStyled>\n  );\n};\n\nButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  onFeedback: PropTypes.func.isRequired,\n};\nexport default Button;\n","import PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport Button from './Button';\n\nconst FeedbackOptions = ({ options, onFeedback }) => {\n  return (\n    <>\n      {options.map((option) => {\n        return (\n          <Button\n            key={shortid.generate()}\n            title={option}\n            onFeedback={onFeedback}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nFeedbackOptions.defaultProps = {\n  options: ['good', 'neutral', 'bad'],\n};\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, posFeedback }) => (\n  <>\n    <p>Good: {good}</p>\n    <p>Neutral: {neutral}</p>\n    <p>Bad: {bad}</p>\n    <p>Total: {total}</p>\n    <p>Positive feedback: {posFeedback}%</p>\n  </>\n);\n\nStatistics.defaultProps = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n  total: 0,\n  posFeedback: 0,\n};\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  posFeedback: PropTypes.number,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.defaultProps = {\n  message: '',\n};\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import { Component } from 'react';\nimport Layout from './components/Layout';\nimport SectionTitle from './components/SectionTitle';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback() {\n    return Object.values(this.state).reduce((acc, curr) => acc + curr, 0);\n  }\n\n  countPositiveFeedbackPercentage() {\n    const total = this.countTotalFeedback();\n    const result = +((this.state.good / total) * 100).toFixed(1);\n    return total ? result : 0;\n  }\n\n  clickHandler = (feedbackType) => {\n    return this.setState((prevState) => ({\n      [feedbackType]: prevState[feedbackType] + 1,\n    }));\n  };\n\n  render() {\n    const options = Object.keys(this.state).map((key) => key);\n    const { good, neutral, bad } = this.state;\n    const feedbackStats = (\n      <Statistics\n        good={good}\n        neutral={neutral}\n        bad={bad}\n        total={this.countTotalFeedback()}\n        posFeedback={this.countPositiveFeedbackPercentage()}\n      />\n    );\n    const notification = <Notification message=\"No feedback given :(\" />;\n\n    return (\n      <Layout>\n        <SectionTitle title=\"What do you think of us?\">\n          <FeedbackOptions options={options} onFeedback={this.clickHandler} />\n        </SectionTitle>\n        <SectionTitle title=\"Statistics\">\n          {this.countTotalFeedback() > 0 ? feedbackStats : notification}\n        </SectionTitle>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}